Sub CreateSQLInsert(pTableSource, pTableOutput, pMode, pRowSize)

 /*
 Call CreateSQLInsert('Qlik_Table', 'Database_Table', [Mode], '[Row Size]');

 TableSource (Qlik_Table):     Table on Qlik memory source itself.
 TableOutput (Database Table): Table's name to be used in the database.
 Mode:                         0 is Full load with Truncate table.
 Row Size:                     Block's size ( inserts by pass )


 Example:

  Call CreateSQLInsert('Fat_Sales',  'Fat_Sales', 0, 5000);
  Call CreateSQLInsert('SalesFinal', 'Fat_Sales', 0, 5000);

 */




 // Debug
 Trace
 .
 -------------------------------------------------------------
 > Reading CreateSQLInsert from table: $(pTableSource) to $(pTableOutput)
 -------------------------------------------------------------;


 If Len($(pRowSize)) < 2 Then
  Set sqlRowSize = 5000;
 Else
  Set sqlRowSize = $(pRowSize);
 End If 

 Let sqlTable                          = '$(pTableSource)';
 Let sqlTableOutput                    = '$(pTableOutput)';
 Let CreateSQLInsert_Rows_Table_Source = NoOfRows('$(pTableSource)');


 Trace 
 Tabela: $(sqlTableOutput);

 Call CreateSQLValues('$(sqlTable)', '$(pTableOutput)', $(sqlRowSize));



 /*
  Mode:
   0 = Full       (Truncate and Insert)
   1 = Additional (Insert all rows from table. Warning for duplicates)
 */
 If '$(pMode)' = 0 or Len('$(pMode)') = 0 Then
  Trace Truncating table '$(pTableOutput)'...;
  Lib Connect To '$(sqlDBCreate_DataConnection)';
  SQL Truncate Table $(pTableOutput) $(sqlDBCreate_End);
 Else
  Trace Nothing;
 EndIf



Let sqlCreateSQLInsert_Rows_Total = NoOfRows('CreateSQLValues_Table_$(sqlTable)');


 Trace Connecting to insert rows package...;
 Lib Connect To $(sqlDBCreate_DataConnection);

 Trace Total rows at table '$(pTableSource)': $(CreateSQLInsert_Rows_Table_Source).;

 // For each row get data to insert into:
 For sqlCreateSQLInsert_Rows = 0 to NoOfRows('CreateSQLValues_Table_$(sqlTable)')-1

  Let sqlCreateSQLInsert_Rows_From = $(sqlCreateSQLInsert_Rows)+1; // For debug propose. In Qlik rows start at 0.

  Trace Insert SQL Method: package $(sqlCreateSQLInsert_Rows_From) from $(sqlCreateSQLInsert_Rows_Total). Package size: $(pRowSize) rows. Total table: $(CreateSQLInsert_Rows_Table_Source) rows.;


  // Now the magic happens:
  Let sqlCreateSQLInsert_Execute = Peek( '$(sqlTable)_Insert', $(sqlCreateSQLInsert_Rows), '$(sqlTable)_Value') & '$(sqlDBCreate_LineBreak)' & 'Values $(sqlDBCreate_LineBreak)' & Peek('$(sqlTable)_Value', $(sqlCreateSQLInsert_Rows), '$(sqlTable)_Value') & '$(sqlDBCreate_LineBreak) $(sqlDBCreate_Add) $(sqlDBCreate_End);';

  $(sqlCreateSQLInsert_Execute)

  Set sqlCreateSQLInsert_Execute = '';
  Set pMode                      = '';

 Next sqlCreateSQLInsert_Rows // For sqlCreateSQLInsert_Rows = 0 to NoOfRows('CreateSQLValues_Table_$(sqlTable)')-1

 DisConnect;


 Set sqlCreateSQLInsert_Rows = '';
 Set sqlTables               = '';


 // Debug
 Trace 
 .
 -------------------------------------------------------------
  > Ending CreateSQLInsert
 -------------------------------------------------------------;

End Sub // Sub CreateSQLInsert(pTableSource, pTableOutput, pMode, pRowSize)